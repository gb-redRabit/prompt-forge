import { useAI } from "./useAI";

export const usePromptOptimizer = () => {
  const { generate, isConfigured } = useAI();

  const optimizePrompt = async (userPrompt: string) => {
    if (!isConfigured.value) {
      throw new Error(
        "AI nie jest skonfigurowane. ProszÄ™ skonfigurowaÄ‡ poÅ‚Ä…czenie w ustawieniach."
      );
    }

    const systemPrompt = `JesteÅ› ekspertem od optymalizacji promptÃ³w AI. Twoim zadaniem jest analiza i ulepszanie promptÃ³w, aby byÅ‚y bardziej efektywne, jasne i dawaÅ‚y lepsze rezultaty.

Dla kaÅ¼dego promptu:
1. Zidentyfikuj gÅ‚Ã³wny cel
2. OceÅ„ jasnoÅ›Ä‡ i specyficznoÅ›Ä‡
3. Zaproponuj ulepszonÄ… wersjÄ™
4. Dodaj sugestie kontekstu i formatowania

Format odpowiedzi:
âœ¨ **Zoptymalizowany Prompt:**
[ulepszona wersja promptu]

ğŸ“Š **Analiza:**
- Cel: [co uÅ¼ytkownik chce osiÄ…gnÄ…Ä‡]
- Problemy: [co moÅ¼na poprawiÄ‡]

ğŸ’¡ **Sugestie:**
- [konkretna sugestia 1]
- [konkretna sugestia 2]
- [konkretna sugestia 3]`;

    try {
      const result = await generate(userPrompt, {
        systemPrompt,
        temperature: 0.7,
        maxTokens: 2000,
      });

      return result.content;
    } catch (error: any) {
      throw new Error(`BÅ‚Ä…d optymalizacji: ${error.message}`);
    }
  };

  return {
    optimizePrompt,
    isConfigured,
  };
};
